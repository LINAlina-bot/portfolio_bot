import os
import logging
import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import CommandStart
from aiogram.types import FSInputFile, InlineKeyboardMarkup, InlineKeyboardButton

# –í–∞—à —Ç–æ–∫–µ–Ω
TOKEN = os.getenv('BOT_TOKEN')
# –í–∞—à Telegram ID
MY_TELEGRAM_ID = 1736108313

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üìö Programs & Pricing", callback_data="programs")],
    [InlineKeyboardButton(text="üìû Book a Call", callback_data="book_call")],
    [InlineKeyboardButton(text="üí≥ Payment", url="https://google.com")],
    [InlineKeyboardButton(text="‚ùì FAQ", callback_data="faq")],
    [InlineKeyboardButton(text="üõü Support", callback_data="support")]
])

# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@dp.message(CommandStart())
async def cmd_start(message: types.Message):
    await message.answer(
        "Welcome to LuxService Assistant!\n\n"
        "This bot was created as part of a portfolio project.\n"
        "Developer: Albina\n\n"
        "‚ú® Everything for your comfort, growth, and success.\n\n"
        "Please choose an option below:",
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@dp.callback_query(F.data == "programs")
async def send_programs(callback: types.CallbackQuery):
    image = FSInputFile("price_image.jpg")  # –£–±–µ–¥–∏—Å—å, —á—Ç–æ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –ª–µ–∂–∏—Ç —Ä—è–¥–æ–º —Å —Ñ–∞–π–ª–æ–º
    await callback.message.answer_photo(image, caption="Here are our Programs and Pricing!")

@dp.callback_query(F.data == "book_call")
async def book_call(callback: types.CallbackQuery):
    await callback.message.answer(
        "Please provide your information:\n\n"
        "1. Your Name\n"
        "2. Email Address\n"
        "3. Preferred Contact Method (Telegram / WhatsApp / Phone)\n"
        "4. Preferred Date and Time\n\n"
        "Our manager will contact you shortly after!"
    )

@dp.callback_query(F.data == "faq")
async def faq(callback: types.CallbackQuery):
    await callback.message.answer(
        "Frequently Asked Questions:\n\n"
        "‚ùì How to book a consultation?\n"
        "üëâ Click 'Book a Call' and fill the form.\n\n"
        "‚ùì How can I pay?\n"
        "üëâ Click 'Payment' to proceed with secure payment.\n\n"
        "‚ùì Can I get a refund?\n"
        "üëâ Please contact Support for refund policy details."
    )

@dp.callback_query(F.data == "support")
async def support(callback: types.CallbackQuery):
    await callback.message.answer(
        "üõü For any support issues, please contact our manager:\n"
        "@your_support_contact\n\n"
        "We are here to help you 24/7!"
    )

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())